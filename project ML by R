library(tidyverse)
library(caret)
library(mlbench)
library(MLmetrics)

df <- read.csv("churn.csv")

# preview data
head(df)

# 1. split data 
train_test_split <- function(data,size=0.8) {
  set.seed(42)
  n <- nrow(data)
  train_id <- sample(1:n,size*n)
  train_df <- df[train_id,]
  test_df <- df[-train_id,]
  return(list(train_df,test_df))
}
prep_df <- train_test_split(df, size = 0.8)

## preProcess()
## compute x_bar , x_sd
transformer <- preProcess(prep_df[[1]],
                          method=c("center","scale"))

train_df_z <- predict(transformer, prep_df[[1]])
test_df_z <- predict(transformer, prep_df[[2]])

# 2. train model
set.seed(42)



## prSummary
ctrl <- trainControl(method = "cv", 
                     number = 5,
                     summaryFunction = prSummary, #pr = precision+recall
                     classProbs = TRUE) # ต้องมีค่า prob สำหรับการทำนาย

knn_model <- train(churn ~ totaldayminutes+internationalplan+totaldaycharge+voicemailplan,
                   data = train_df_z,
                   method = "knn",
                   metric = "Recall", 
                   trControl = ctrl)

## method = "cv"
ctrl <- trainControl(method = "cv", number = 5)
model <- train(churn ~ totaldayminutes+internationalplan+totaldaycharge+voicemailplan,
               data = train_df_z, 
               method = "glm",
               trControl = ctrl)


# 3. score model
pred_df <- predict(knn_model, newdata = test_df_z)


# 4. evaluate model
mean(pred_df == test_df_z$churn)

confusionMatrix(pred_df,
                factor(test_df_z$churn),
                positive = "Yes",
                mode = "prec_recall"
                ) 
